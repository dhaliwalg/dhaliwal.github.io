{"ast":null,"code":"import _classCallCheck from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport var BaseMover = /*#__PURE__*/function () {\n  function BaseMover() {\n    _classCallCheck(this, BaseMover);\n  }\n\n  _createClass(BaseMover, [{\n    key: \"init\",\n    value: function init(particle) {\n      var _a;\n\n      var container = particle.container,\n          options = particle.options,\n          spinOptions = options.move.spin;\n\n      if (spinOptions.enable) {\n        var spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : {\n          x: 50,\n          y: 50\n        };\n        var spinCenter = {\n          x: spinPos.x / 100 * container.canvas.size.width,\n          y: spinPos.y / 100 * container.canvas.size.height\n        };\n        var pos = particle.getPosition();\n        var distance = getDistance(pos, spinCenter);\n        var spinAcceleration = getRangeValue(spinOptions.acceleration);\n        particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n        particle.spin = {\n          center: spinCenter,\n          direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n          angle: particle.velocity.angle,\n          radius: distance,\n          acceleration: particle.retina.spinAcceleration\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed && particle.options.move.enable;\n    }\n  }, {\n    key: \"move\",\n    value: function move(particle, delta) {\n      var _a, _b, _c;\n\n      var _d, _e;\n\n      var particleOptions = particle.options,\n          moveOptions = particleOptions.move;\n\n      if (!moveOptions.enable) {\n        return;\n      }\n\n      var container = particle.container,\n          slowFactor = getProximitySpeedFactor(particle),\n          baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : _d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio) * container.retina.reduceFactor,\n          moveDrift = (_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : _e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio,\n          maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio,\n          sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1,\n          speedFactor = sizeFactor * slowFactor * (delta.factor || 1),\n          diffFactor = 2,\n          moveSpeed = baseSpeed * speedFactor / diffFactor;\n      applyPath(particle, delta);\n      var gravityOptions = particle.gravity,\n          gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n\n      if (gravityOptions.enable && moveSpeed) {\n        particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n      }\n\n      if (moveDrift && moveSpeed) {\n        particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n      }\n\n      var decay = particle.moveDecay;\n\n      if (decay != 1) {\n        particle.velocity.multTo(decay);\n      }\n\n      var velocity = particle.velocity.mult(moveSpeed),\n          maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n\n      if (gravityOptions.enable && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {\n        velocity.y = gravityFactor * maxSpeed;\n\n        if (moveSpeed) {\n          particle.velocity.y = velocity.y / moveSpeed;\n        }\n      }\n\n      var zIndexOptions = particle.options.zIndex,\n          zVelocityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.velocityRate);\n\n      if (moveOptions.spin.enable) {\n        spin(particle, moveSpeed);\n      } else {\n        if (zVelocityFactor != 1) {\n          velocity.multTo(zVelocityFactor);\n        }\n\n        particle.position.addTo(velocity);\n\n        if (moveOptions.vibrate) {\n          particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n          particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n        }\n      }\n\n      applyDistance(particle);\n    }\n  }]);\n\n  return BaseMover;\n}();","map":{"version":3,"names":["getDistance","getRangeMax","getRangeValue","applyDistance","applyPath","getProximitySpeedFactor","spin","BaseMover","particle","_a","container","options","spinOptions","move","enable","spinPos","position","x","y","spinCenter","canvas","size","width","height","pos","getPosition","distance","spinAcceleration","acceleration","retina","pixelRatio","center","direction","velocity","angle","radius","destroyed","delta","_b","_c","_d","_e","particleOptions","moveOptions","slowFactor","baseSpeed","moveSpeed","speed","reduceFactor","moveDrift","drift","maxSize","value","sizeFactor","getRadius","speedFactor","factor","diffFactor","gravityOptions","gravity","gravityFactor","inverse","decay","moveDecay","multTo","mult","maxSpeed","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","addTo","vibrate","Math","sin","cos"],"sources":["C:/Users/golde/Documents/projects/portfolio/node_modules/tsparticles-move-base/esm/BaseMover.js"],"sourcesContent":["import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 };\n            const spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            };\n            const pos = particle.getPosition();\n            const distance = getDistance(pos, spinCenter);\n            const spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        applyPath(particle, delta);\n        const gravityOptions = particle.gravity, gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n        if (gravityOptions.enable && moveSpeed) {\n            particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n        }\n        if (moveDrift && moveSpeed) {\n            particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        }\n        const decay = particle.moveDecay;\n        if (decay != 1) {\n            particle.velocity.multTo(decay);\n        }\n        const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n        if (gravityOptions.enable &&\n            maxSpeed > 0 &&\n            ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n            velocity.y = gravityFactor * maxSpeed;\n            if (moveSpeed) {\n                particle.velocity.y = velocity.y / moveSpeed;\n            }\n        }\n        const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}