{"ast":null,"code":"import _classCallCheck from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue } from \"tsparticles-engine\";\n\nfunction updateTilt(particle, delta) {\n  var _a;\n\n  if (!particle.tilt) {\n    return;\n  }\n\n  var tilt = particle.options.tilt;\n  var tiltAnimation = tilt.animation;\n  var speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  var max = 2 * Math.PI;\n\n  if (!tiltAnimation.enable) {\n    return;\n  }\n\n  switch (particle.tilt.status) {\n    case 0:\n      particle.tilt.value += speed;\n\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n\n      break;\n\n    case 1:\n    default:\n      particle.tilt.value -= speed;\n\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n\n      break;\n  }\n}\n\nexport var TiltUpdater = /*#__PURE__*/function () {\n  function TiltUpdater(container) {\n    _classCallCheck(this, TiltUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(TiltUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var tiltOptions = particle.options.tilt;\n      particle.tilt = {\n        enable: tiltOptions.enable,\n        value: getRangeValue(tiltOptions.value) * Math.PI / 180,\n        sinDirection: Math.random() >= 0.5 ? 1 : -1,\n        cosDirection: Math.random() >= 0.5 ? 1 : -1\n      };\n      var tiltDirection = tiltOptions.direction;\n\n      if (tiltDirection === \"random\") {\n        var index = Math.floor(Math.random() * 2);\n        tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n      }\n\n      switch (tiltDirection) {\n        case \"counter-clockwise\":\n        case \"counterClockwise\":\n          particle.tilt.status = 1;\n          break;\n\n        case \"clockwise\":\n          particle.tilt.status = 0;\n          break;\n      }\n\n      var tiltAnimation = particle.options.tilt.animation;\n\n      if (tiltAnimation.enable) {\n        particle.tilt.velocity = getRangeValue(tiltAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n        if (!tiltAnimation.sync) {\n          particle.tilt.velocity *= Math.random();\n        }\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var tilt = particle.options.tilt;\n      var tiltAnimation = tilt.animation;\n      return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateTilt(particle, delta);\n    }\n  }]);\n\n  return TiltUpdater;\n}();","map":{"version":3,"names":["getRangeValue","updateTilt","particle","delta","_a","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","value","TiltUpdater","container","tiltOptions","sinDirection","random","cosDirection","tiltDirection","direction","index","floor","retina","reduceFactor","sync","destroyed","spawning","isEnabled"],"sources":["C:/Users/golde/Documents/projects/portfolio/node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js"],"sourcesContent":["import { getRangeValue } from \"tsparticles-engine\";\nfunction updateTilt(particle, delta) {\n    var _a;\n    if (!particle.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case 0:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = 1;\n                break;\n            case \"clockwise\":\n                particle.tilt.status = 0;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt.animation;\n        if (tiltAnimation.enable) {\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tilt = particle.options.tilt;\n        const tiltAnimation = tilt.animation;\n        return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,oBAA9B;;AACA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,KAA9B,EAAqC;EACjC,IAAIC,EAAJ;;EACA,IAAI,CAACF,QAAQ,CAACG,IAAd,EAAoB;IAChB;EACH;;EACD,IAAMA,IAAI,GAAGH,QAAQ,CAACI,OAAT,CAAiBD,IAA9B;EACA,IAAME,aAAa,GAAGF,IAAI,CAACG,SAA3B;EACA,IAAMC,KAAK,GAAG,CAAC,CAACL,EAAE,GAAGF,QAAQ,CAACG,IAAT,CAAcK,QAApB,MAAkC,IAAlC,IAA0CN,EAAE,KAAK,KAAK,CAAtD,GAA0DA,EAA1D,GAA+D,CAAhE,IAAqED,KAAK,CAACQ,MAAzF;EACA,IAAMC,GAAG,GAAG,IAAIC,IAAI,CAACC,EAArB;;EACA,IAAI,CAACP,aAAa,CAACQ,MAAnB,EAA2B;IACvB;EACH;;EACD,QAAQb,QAAQ,CAACG,IAAT,CAAcW,MAAtB;IACI,KAAK,CAAL;MACId,QAAQ,CAACG,IAAT,CAAcY,KAAd,IAAuBR,KAAvB;;MACA,IAAIP,QAAQ,CAACG,IAAT,CAAcY,KAAd,GAAsBL,GAA1B,EAA+B;QAC3BV,QAAQ,CAACG,IAAT,CAAcY,KAAd,IAAuBL,GAAvB;MACH;;MACD;;IACJ,KAAK,CAAL;IACA;MACIV,QAAQ,CAACG,IAAT,CAAcY,KAAd,IAAuBR,KAAvB;;MACA,IAAIP,QAAQ,CAACG,IAAT,CAAcY,KAAd,GAAsB,CAA1B,EAA6B;QACzBf,QAAQ,CAACG,IAAT,CAAcY,KAAd,IAAuBL,GAAvB;MACH;;MACD;EAbR;AAeH;;AACD,WAAaM,WAAb;EACI,qBAAYC,SAAZ,EAAuB;IAAA;;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;EAHL;IAAA;IAAA,OAII,cAAKjB,QAAL,EAAe;MACX,IAAMkB,WAAW,GAAGlB,QAAQ,CAACI,OAAT,CAAiBD,IAArC;MACAH,QAAQ,CAACG,IAAT,GAAgB;QACZU,MAAM,EAAEK,WAAW,CAACL,MADR;QAEZE,KAAK,EAAGjB,aAAa,CAACoB,WAAW,CAACH,KAAb,CAAb,GAAmCJ,IAAI,CAACC,EAAzC,GAA+C,GAF1C;QAGZO,YAAY,EAAER,IAAI,CAACS,MAAL,MAAiB,GAAjB,GAAuB,CAAvB,GAA2B,CAAC,CAH9B;QAIZC,YAAY,EAAEV,IAAI,CAACS,MAAL,MAAiB,GAAjB,GAAuB,CAAvB,GAA2B,CAAC;MAJ9B,CAAhB;MAMA,IAAIE,aAAa,GAAGJ,WAAW,CAACK,SAAhC;;MACA,IAAID,aAAa,KAAK,QAAtB,EAAgC;QAC5B,IAAME,KAAK,GAAGb,IAAI,CAACc,KAAL,CAAWd,IAAI,CAACS,MAAL,KAAgB,CAA3B,CAAd;QACAE,aAAa,GAAGE,KAAK,GAAG,CAAR,GAAY,mBAAZ,GAAkC,WAAlD;MACH;;MACD,QAAQF,aAAR;QACI,KAAK,mBAAL;QACA,KAAK,kBAAL;UACItB,QAAQ,CAACG,IAAT,CAAcW,MAAd,GAAuB,CAAvB;UACA;;QACJ,KAAK,WAAL;UACId,QAAQ,CAACG,IAAT,CAAcW,MAAd,GAAuB,CAAvB;UACA;MAPR;;MASA,IAAMT,aAAa,GAAGL,QAAQ,CAACI,OAAT,CAAiBD,IAAjB,CAAsBG,SAA5C;;MACA,IAAID,aAAa,CAACQ,MAAlB,EAA0B;QACtBb,QAAQ,CAACG,IAAT,CAAcK,QAAd,GAA0BV,aAAa,CAACO,aAAa,CAACE,KAAf,CAAb,GAAqC,GAAtC,GAA6C,KAAKU,SAAL,CAAeS,MAAf,CAAsBC,YAA5F;;QACA,IAAI,CAACtB,aAAa,CAACuB,IAAnB,EAAyB;UACrB5B,QAAQ,CAACG,IAAT,CAAcK,QAAd,IAA0BG,IAAI,CAACS,MAAL,EAA1B;QACH;MACJ;IACJ;EAjCL;IAAA;IAAA,OAkCI,mBAAUpB,QAAV,EAAoB;MAChB,IAAMG,IAAI,GAAGH,QAAQ,CAACI,OAAT,CAAiBD,IAA9B;MACA,IAAME,aAAa,GAAGF,IAAI,CAACG,SAA3B;MACA,OAAO,CAACN,QAAQ,CAAC6B,SAAV,IAAuB,CAAC7B,QAAQ,CAAC8B,QAAjC,IAA6CzB,aAAa,CAACQ,MAAlE;IACH;EAtCL;IAAA;IAAA,OAuCI,gBAAOb,QAAP,EAAiBC,KAAjB,EAAwB;MACpB,IAAI,CAAC,KAAK8B,SAAL,CAAe/B,QAAf,CAAL,EAA+B;QAC3B;MACH;;MACDD,UAAU,CAACC,QAAD,EAAWC,KAAX,CAAV;IACH;EA5CL;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}