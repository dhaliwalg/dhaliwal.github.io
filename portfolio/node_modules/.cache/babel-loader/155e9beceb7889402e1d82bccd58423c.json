{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\golde\\\\Documents\\\\projects\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { getStyleFromHsl } from \"tsparticles-engine\";\nvar currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n\nfunction replaceColorSvg(imageShape, color, opacity) {\n  var svgData = imageShape.svgData;\n\n  if (!svgData) {\n    return \"\";\n  }\n\n  var colorStyle = getStyleFromHsl(color, opacity);\n\n  if (svgData.includes(\"fill\")) {\n    return svgData.replace(currentColorRegex, function () {\n      return colorStyle;\n    });\n  }\n\n  var preFillIndex = svgData.indexOf(\">\");\n  return \"\".concat(svgData.substring(0, preFillIndex), \" fill=\\\"\").concat(colorStyle, \"\\\"\").concat(svgData.substring(preFillIndex));\n}\n\nexport function loadImage(_x) {\n  return _loadImage.apply(this, arguments);\n}\n\nfunction _loadImage() {\n  _loadImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(image) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              image.loading = true;\n              var img = new Image();\n              img.addEventListener(\"load\", function () {\n                image.element = img;\n                image.loading = false;\n                resolve();\n              });\n              img.addEventListener(\"error\", function () {\n                image.error = true;\n                image.loading = false;\n                console.error(\"Error tsParticles - loading image: \".concat(image.source));\n                resolve();\n              });\n              img.src = image.source;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadImage.apply(this, arguments);\n}\n\nexport function downloadSvgImage(_x2) {\n  return _downloadSvgImage.apply(this, arguments);\n}\n\nfunction _downloadSvgImage() {\n  _downloadSvgImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(image) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(image.type !== \"svg\")) {\n              _context2.next = 4;\n              break;\n            }\n\n            _context2.next = 3;\n            return loadImage(image);\n\n          case 3:\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            image.loading = true;\n            _context2.next = 7;\n            return fetch(image.source);\n\n          case 7:\n            response = _context2.sent;\n            image.loading = false;\n\n            if (!response.ok) {\n              console.error(\"Error tsParticles - Image not found\");\n              image.error = true;\n            }\n\n            if (image.error) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.next = 13;\n            return response.text();\n\n          case 13:\n            image.svgData = _context2.sent;\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _downloadSvgImage.apply(this, arguments);\n}\n\nexport function replaceImageColor(image, imageData, color, particle) {\n  var _a, _b, _c;\n\n  var svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1);\n  var svg = new Blob([svgColoredData], {\n    type: \"image/svg+xml\"\n  });\n  var domUrl = URL || window.URL || window.webkitURL || window;\n  var url = domUrl.createObjectURL(svg);\n  var img = new Image();\n  var imageRes = {\n    data: Object.assign(Object.assign({}, image), {\n      svgData: svgColoredData\n    }),\n    ratio: imageData.width / imageData.height,\n    replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n    source: imageData.src\n  };\n  img.addEventListener(\"load\", function () {\n    var pImage = particle.image;\n\n    if (pImage) {\n      pImage.loaded = true;\n      image.element = img;\n    }\n\n    domUrl.revokeObjectURL(url);\n  });\n  img.addEventListener(\"error\", function () {\n    domUrl.revokeObjectURL(url);\n    var img2 = Object.assign(Object.assign({}, image), {\n      error: false,\n      loading: true\n    });\n    loadImage(img2).then(function () {\n      var pImage = particle.image;\n\n      if (pImage) {\n        image.element = img2.element;\n        pImage.loaded = true;\n      }\n    });\n  });\n  img.src = url;\n  return imageRes;\n}","map":{"version":3,"names":["getStyleFromHsl","currentColorRegex","replaceColorSvg","imageShape","color","opacity","svgData","colorStyle","includes","replace","preFillIndex","indexOf","substring","loadImage","image","Promise","resolve","loading","img","Image","addEventListener","element","error","console","source","src","downloadSvgImage","type","fetch","response","ok","text","replaceImageColor","imageData","particle","_a","_b","_c","svgColoredData","value","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","imageRes","data","Object","assign","ratio","width","height","replaceColor","replace_color","pImage","loaded","revokeObjectURL","img2","then"],"sources":["C:/Users/golde/Documents/projects/portfolio/node_modules/tsparticles-shape-image/esm/Utils.js"],"sourcesContent":["import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        img.addEventListener(\"load\", () => {\n            image.element = img;\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    image.loading = false;\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1);\n    const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n    const domUrl = URL || window.URL || window.webkitURL || window;\n    const url = domUrl.createObjectURL(svg);\n    const img = new Image();\n    const imageRes = {\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    img.addEventListener(\"load\", () => {\n        const pImage = particle.image;\n        if (pImage) {\n            pImage.loaded = true;\n            image.element = img;\n        }\n        domUrl.revokeObjectURL(url);\n    });\n    img.addEventListener(\"error\", () => {\n        domUrl.revokeObjectURL(url);\n        const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n        loadImage(img2).then(() => {\n            const pImage = particle.image;\n            if (pImage) {\n                image.element = img2.element;\n                pImage.loaded = true;\n            }\n        });\n    });\n    img.src = url;\n    return imageRes;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}