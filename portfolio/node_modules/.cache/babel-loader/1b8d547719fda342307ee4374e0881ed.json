{"ast":null,"code":"import _classCallCheck from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var Vector = /*#__PURE__*/function () {\n  function Vector(xOrCoords, y) {\n    _classCallCheck(this, Vector);\n\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n    } else {\n      throw new Error(\"tsParticles - Vector not initialized correctly\");\n    }\n  }\n\n  _createClass(Vector, [{\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(this.getLengthSq());\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }, {\n    key: \"add\",\n    value: function add(v) {\n      return Vector.create(this.x + v.x, this.y + v.y);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector.create(this.x - v.x, this.y - v.y);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector.create(this.x * n, this.y * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector.create(this.x / n, this.y / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector.clone(this);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(v) {\n      this.x = v.x;\n      this.y = v.y;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector.create(source.x, source.y);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y) {\n      return new Vector(x, y);\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return Vector.create(0, 0);\n    }\n  }]);\n\n  return Vector;\n}();","map":{"version":3,"names":["Vector","xOrCoords","y","x","undefined","Error","Math","atan2","angle","updateFromAngle","length","sqrt","getLengthSq","v","create","n","sub","abs","clone","cos","sin","source"],"sources":["C:/Users/golde/Documents/projects/portfolio/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js"],"sourcesContent":["export class Vector {\n    constructor(xOrCoords, y) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector not initialized correctly\");\n        }\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(v) {\n        this.x = v.x;\n        this.y = v.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"],"mappings":";;AAAA,WAAaA,MAAb;EACI,gBAAYC,SAAZ,EAAuBC,CAAvB,EAA0B;IAAA;;IACtB,IAAI,OAAOD,SAAP,KAAqB,QAArB,IAAiCA,SAArC,EAAgD;MAC5C,KAAKE,CAAL,GAASF,SAAS,CAACE,CAAnB;MACA,KAAKD,CAAL,GAASD,SAAS,CAACC,CAAnB;IACH,CAHD,MAIK,IAAID,SAAS,KAAKG,SAAd,IAA2BF,CAAC,KAAKE,SAArC,EAAgD;MACjD,KAAKD,CAAL,GAASF,SAAT;MACA,KAAKC,CAAL,GAASA,CAAT;IACH,CAHI,MAIA;MACD,MAAM,IAAIG,KAAJ,CAAU,gDAAV,CAAN;IACH;EACJ;;EAbL;IAAA;IAAA,KAuBI,eAAY;MACR,OAAOC,IAAI,CAACC,KAAL,CAAW,KAAKL,CAAhB,EAAmB,KAAKC,CAAxB,CAAP;IACH,CAzBL;IAAA,KA0BI,aAAUK,KAAV,EAAiB;MACb,KAAKC,eAAL,CAAqBD,KAArB,EAA4B,KAAKE,MAAjC;IACH;EA5BL;IAAA;IAAA,KA6BI,eAAa;MACT,OAAOJ,IAAI,CAACK,IAAL,CAAU,KAAKC,WAAL,EAAV,CAAP;IACH,CA/BL;IAAA,KAgCI,aAAWF,MAAX,EAAmB;MACf,KAAKD,eAAL,CAAqB,KAAKD,KAA1B,EAAiCE,MAAjC;IACH;EAlCL;IAAA;IAAA,OAmCI,aAAIG,CAAJ,EAAO;MACH,OAAOb,MAAM,CAACc,MAAP,CAAc,KAAKX,CAAL,GAASU,CAAC,CAACV,CAAzB,EAA4B,KAAKD,CAAL,GAASW,CAAC,CAACX,CAAvC,CAAP;IACH;EArCL;IAAA;IAAA,OAsCI,eAAMW,CAAN,EAAS;MACL,KAAKV,CAAL,IAAUU,CAAC,CAACV,CAAZ;MACA,KAAKD,CAAL,IAAUW,CAAC,CAACX,CAAZ;IACH;EAzCL;IAAA;IAAA,OA0CI,aAAIW,CAAJ,EAAO;MACH,OAAOb,MAAM,CAACc,MAAP,CAAc,KAAKX,CAAL,GAASU,CAAC,CAACV,CAAzB,EAA4B,KAAKD,CAAL,GAASW,CAAC,CAACX,CAAvC,CAAP;IACH;EA5CL;IAAA;IAAA,OA6CI,iBAAQW,CAAR,EAAW;MACP,KAAKV,CAAL,IAAUU,CAAC,CAACV,CAAZ;MACA,KAAKD,CAAL,IAAUW,CAAC,CAACX,CAAZ;IACH;EAhDL;IAAA;IAAA,OAiDI,cAAKa,CAAL,EAAQ;MACJ,OAAOf,MAAM,CAACc,MAAP,CAAc,KAAKX,CAAL,GAASY,CAAvB,EAA0B,KAAKb,CAAL,GAASa,CAAnC,CAAP;IACH;EAnDL;IAAA;IAAA,OAoDI,gBAAOA,CAAP,EAAU;MACN,KAAKZ,CAAL,IAAUY,CAAV;MACA,KAAKb,CAAL,IAAUa,CAAV;IACH;EAvDL;IAAA;IAAA,OAwDI,aAAIA,CAAJ,EAAO;MACH,OAAOf,MAAM,CAACc,MAAP,CAAc,KAAKX,CAAL,GAASY,CAAvB,EAA0B,KAAKb,CAAL,GAASa,CAAnC,CAAP;IACH;EA1DL;IAAA;IAAA,OA2DI,eAAMA,CAAN,EAAS;MACL,KAAKZ,CAAL,IAAUY,CAAV;MACA,KAAKb,CAAL,IAAUa,CAAV;IACH;EA9DL;IAAA;IAAA,OA+DI,oBAAWF,CAAX,EAAc;MACV,OAAO,KAAKG,GAAL,CAASH,CAAT,EAAYH,MAAnB;IACH;EAjEL;IAAA;IAAA,OAkEI,uBAAc;MACV,OAAO,cAAKP,CAAL,EAAU,CAAV,aAAc,KAAKD,CAAnB,EAAwB,CAAxB,CAAP;IACH;EApEL;IAAA;IAAA,OAqEI,sBAAaW,CAAb,EAAgB;MACZ,OAAO,KAAKG,GAAL,CAASH,CAAT,EAAYD,WAAZ,EAAP;IACH;EAvEL;IAAA;IAAA,OAwEI,6BAAoBC,CAApB,EAAuB;MACnB,OAAOP,IAAI,CAACW,GAAL,CAASJ,CAAC,CAACV,CAAF,GAAM,KAAKA,CAApB,IAAyBG,IAAI,CAACW,GAAL,CAASJ,CAAC,CAACX,CAAF,GAAM,KAAKA,CAApB,CAAhC;IACH;EA1EL;IAAA;IAAA,OA2EI,gBAAO;MACH,OAAOF,MAAM,CAACkB,KAAP,CAAa,IAAb,CAAP;IACH;EA7EL;IAAA;IAAA,OA8EI,eAAML,CAAN,EAAS;MACL,KAAKV,CAAL,GAASU,CAAC,CAACV,CAAX;MACA,KAAKD,CAAL,GAASW,CAAC,CAACX,CAAX;IACH;EAjFL;IAAA;IAAA,OAkFI,gBAAOM,KAAP,EAAc;MACV,OAAOR,MAAM,CAACc,MAAP,CAAc,KAAKX,CAAL,GAASG,IAAI,CAACa,GAAL,CAASX,KAAT,CAAT,GAA2B,KAAKN,CAAL,GAASI,IAAI,CAACc,GAAL,CAASZ,KAAT,CAAlD,EAAmE,KAAKL,CAAL,GAASG,IAAI,CAACc,GAAL,CAASZ,KAAT,CAAT,GAA2B,KAAKN,CAAL,GAASI,IAAI,CAACa,GAAL,CAASX,KAAT,CAAvG,CAAP;IACH;EApFL;IAAA;IAAA,OAqFI,yBAAgBA,KAAhB,EAAuBE,MAAvB,EAA+B;MAC3B,KAAKP,CAAL,GAASG,IAAI,CAACa,GAAL,CAASX,KAAT,IAAkBE,MAA3B;MACA,KAAKR,CAAL,GAASI,IAAI,CAACc,GAAL,CAASZ,KAAT,IAAkBE,MAA3B;IACH;EAxFL;IAAA;IAAA,OAcI,eAAaW,MAAb,EAAqB;MACjB,OAAOrB,MAAM,CAACc,MAAP,CAAcO,MAAM,CAAClB,CAArB,EAAwBkB,MAAM,CAACnB,CAA/B,CAAP;IACH;EAhBL;IAAA;IAAA,OAiBI,gBAAcC,CAAd,EAAiBD,CAAjB,EAAoB;MAChB,OAAO,IAAIF,MAAJ,CAAWG,CAAX,EAAcD,CAAd,CAAP;IACH;EAnBL;IAAA;IAAA,KAoBI,eAAoB;MAChB,OAAOF,MAAM,CAACc,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAAP;IACH;EAtBL;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}