{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\golde\\\\Documents\\\\projects\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { Circle, ExternalInteractorBase, Vector, calcEasing, clamp, getDistances, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nexport var Attractor = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Attractor, _ExternalInteractorBa);\n\n  var _super = _createSuper(Attractor);\n\n  function Attractor(container) {\n    var _this;\n\n    _classCallCheck(this, Attractor);\n\n    _this = _super.call(this, container);\n\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n\n    _this.handleClickMode = function (mode) {\n      var options = _this.container.actualOptions;\n\n      if (mode !== \"attract\") {\n        return;\n      }\n\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n\n      container.attract.clicking = true;\n      container.attract.count = 0;\n\n      var _iterator = _createForOfIteratorHelper(container.attract.particles),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      container.attract.particles = [];\n      container.attract.finish = false;\n      setTimeout(function () {\n        if (!container.destroyed) {\n          if (!container.attract) {\n            container.attract = {\n              particles: []\n            };\n          }\n\n          container.attract.clicking = false;\n        }\n      }, options.interactivity.modes.attract.duration * 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Attractor, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events;\n\n      if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n      return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var container, options, mouseMoveStatus, events, hoverEnabled, hoverMode, clickEnabled, clickMode;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n\n                if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n                  this.hoverAttract();\n                } else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n                  this.clickAttract();\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"hoverAttract\",\n    value: function hoverAttract() {\n      var container = this.container;\n      var mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n  }, {\n    key: \"processAttract\",\n    value: function processAttract(position, attractRadius, area) {\n      var container = this.container;\n      var attractOptions = container.actualOptions.interactivity.modes.attract;\n      var query = container.particles.quadTree.query(area);\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n\n          var _getDistances = getDistances(particle.position, position),\n              dx = _getDistances.dx,\n              dy = _getDistances.dy,\n              distance = _getDistances.distance;\n\n          var velocity = attractOptions.speed * attractOptions.factor;\n          var attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n          var normVec = Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n          particle.position.subFrom(normVec);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"clickAttract\",\n    value: function clickAttract() {\n      var container = this.container;\n\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n\n      if (!container.attract.finish) {\n        if (!container.attract.count) {\n          container.attract.count = 0;\n        }\n\n        container.attract.count++;\n\n        if (container.attract.count === container.particles.count) {\n          container.attract.finish = true;\n        }\n      }\n\n      if (container.attract.clicking) {\n        var mousePos = container.interactivity.mouse.clickPosition;\n\n        if (!mousePos) {\n          return;\n        }\n\n        var attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n      } else if (container.attract.clicking === false) {\n        container.attract.particles = [];\n      }\n\n      return;\n    }\n  }]);\n\n  return Attractor;\n}(ExternalInteractorBase);","map":{"version":3,"names":["Circle","ExternalInteractorBase","Vector","calcEasing","clamp","getDistances","isInArray","mouseMoveEvent","Attractor","container","attract","particles","handleClickMode","mode","options","actualOptions","clicking","count","particle","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","interactivity","modes","duration","mouse","events","position","onHover","enable","clickPosition","onClick","hoverMode","clickMode","mouseMoveStatus","status","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","x","y","area","attractOptions","query","quadTree","dx","dy","distance","speed","factor","attractFactor","easing","maxSpeed","normVec","create","subFrom"],"sources":["C:/Users/golde/Documents/projects/portfolio/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js"],"sourcesContent":["import { Circle, ExternalInteractorBase, Vector, calcEasing, clamp, getDistances, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions;\n            if (mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, options.interactivity.modes.attract.duration * 1000);\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}