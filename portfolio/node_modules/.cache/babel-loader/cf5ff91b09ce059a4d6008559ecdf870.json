{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\golde\\\\Documents\\\\projects\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Particles_engine;\n\nimport { calcPositionFromSize, getRangeMax, getRangeMin, getValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { loadParticlesOptions } from \"../Utils/Utils\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n\n    this.container = container;\n\n    _Particles_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n    var canvasSize = this.container.canvas.size;\n    this.linksColors = new Map();\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n  }\n\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.addManualParticles();\n\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n\n      container.pathGenerator.init(container);\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n\n      return redraw;\n    }()\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n\n      var deleted = 0;\n\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n\n        __classPrivateFieldGet(this, _Particles_engine, \"f\").dispatchEvent(\"particleRemoved\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(delta) {\n        var container, particlesToDelete, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, _particle, resizeFactor, _iterator5, _step5, _step5$value, _plugin, _iterator6, _step6, mover, _i2, _particlesToDelete, particle, _iterator4, _step4, _particle2, _iterator7, _step7, updater;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                container.pathGenerator.update();\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n\n                    if (plugin.update !== undefined) {\n                      plugin.update(delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                _iterator3 = _createForOfIteratorHelper(this.array);\n                _context2.prev = 5;\n\n                _iterator3.s();\n\n              case 7:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context2.next = 39;\n                  break;\n                }\n\n                _particle = _step3.value;\n                resizeFactor = container.canvas.resizeFactor;\n\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                }\n\n                _particle.ignoresResizeRatio = false;\n                _particle.bubble.inRange = false;\n                _iterator5 = _createForOfIteratorHelper(this.container.plugins);\n                _context2.prev = 14;\n\n                _iterator5.s();\n\n              case 16:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                _step5$value = _slicedToArray(_step5.value, 2), _plugin = _step5$value[1];\n\n                if (!_particle.destroyed) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                return _context2.abrupt(\"break\", 23);\n\n              case 20:\n                if (_plugin.particleUpdate) {\n                  _plugin.particleUpdate(_particle, delta);\n                }\n\n              case 21:\n                _context2.next = 16;\n                break;\n\n              case 23:\n                _context2.next = 28;\n                break;\n\n              case 25:\n                _context2.prev = 25;\n                _context2.t0 = _context2[\"catch\"](14);\n\n                _iterator5.e(_context2.t0);\n\n              case 28:\n                _context2.prev = 28;\n\n                _iterator5.f();\n\n                return _context2.finish(28);\n\n              case 31:\n                _iterator6 = _createForOfIteratorHelper(this.movers);\n\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    mover = _step6.value;\n\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n\n                if (!_particle.destroyed) {\n                  _context2.next = 36;\n                  break;\n                }\n\n                particlesToDelete.push(_particle);\n                return _context2.abrupt(\"continue\", 37);\n\n              case 36:\n                this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n\n              case 37:\n                _context2.next = 7;\n                break;\n\n              case 39:\n                _context2.next = 44;\n                break;\n\n              case 41:\n                _context2.prev = 41;\n                _context2.t1 = _context2[\"catch\"](5);\n\n                _iterator3.e(_context2.t1);\n\n              case 44:\n                _context2.prev = 44;\n\n                _iterator3.f();\n\n                return _context2.finish(44);\n\n              case 47:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n\n                _context2.next = 50;\n                return this.interactionManager.externalInteract(delta);\n\n              case 50:\n                _iterator4 = _createForOfIteratorHelper(container.particles.array);\n                _context2.prev = 51;\n\n                _iterator4.s();\n\n              case 53:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context2.next = 62;\n                  break;\n                }\n\n                _particle2 = _step4.value;\n                _iterator7 = _createForOfIteratorHelper(this.updaters);\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    updater = _step7.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context2.next = 60;\n                  break;\n                }\n\n                _context2.next = 60;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n\n              case 60:\n                _context2.next = 53;\n                break;\n\n              case 62:\n                _context2.next = 67;\n                break;\n\n              case 64:\n                _context2.prev = 64;\n                _context2.t2 = _context2[\"catch\"](51);\n\n                _iterator4.e(_context2.t2);\n\n              case 67:\n                _context2.prev = 67;\n\n                _iterator4.f();\n\n                return _context2.finish(67);\n\n              case 70:\n                delete container.canvas.resizeFactor;\n\n              case 71:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 41, 44, 47], [14, 25, 28, 31], [51, 64, 67, 70]]);\n      }));\n\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(delta) {\n        var container, canvasSize, _iterator8, _step8, _step8$value, plugin, _iterator9, _step9, p;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context3.next = 5;\n                return this.update(delta);\n\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n\n                _iterator8 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                    _step8$value = _slicedToArray(_step8.value, 2), plugin = _step8$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator8.e(err);\n                } finally {\n                  _iterator8.f();\n                }\n\n                _iterator9 = _createForOfIteratorHelper(this.zArray);\n\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    p = _step9.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function draw(_x2) {\n        return _draw.apply(this, arguments);\n      }\n\n      return draw;\n    }()\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n\n      this.pushing = false;\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group) {\n      var container = this.container,\n          options = container.actualOptions,\n          limit = options.particles.number.limit * container.density;\n\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n\n      return this.pushParticle(position, overrideOptions, group);\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent) {\n      var splitOptions = parent.options.destroy.split;\n      var options = loadParticlesOptions(parent.options);\n      var factor = getValue(splitOptions.factor);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n\n      options.load(splitOptions.particles);\n      var offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0,\n          position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset)\n      };\n      return this.pushParticle(position, options, parent.group, function (particle) {\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = parent.splitCount + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = setRangeValue(p1.id, p2.id),\n          key = \"\".concat(getRangeMin(range), \"_\").concat(getRangeMax(range));\n      var res = this.freqs.links.get(key);\n\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.links.set(key, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n          id1 = _ref[0],\n          id2 = _ref[1],\n          id3 = _ref[2];\n\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.triangles.set(key, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n          options = container.actualOptions;\n\n      var _iterator10 = _createForOfIteratorHelper(options.manualParticles),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var particle = _step10.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n\n      for (var group in options.particles.groups) {\n        this.applyDensity(options.particles.groups[group], 0, group);\n      }\n\n      this.applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"applyDensity\",\n    value: function applyDensity(options, manualCount, group) {\n      var _a;\n\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n\n      var numberOptions = options.number,\n          densityFactor = this.initDensityFactor(numberOptions.density),\n          optParticlesNumber = numberOptions.value,\n          optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n          particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n          particlesCount = Math.min(this.count, this.array.filter(function (t) {\n        return t.group === group;\n      }).length);\n      this.limit = numberOptions.limit * densityFactor;\n\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor(densityOptions) {\n      var container = this.container;\n\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n\n      var canvas = container.canvas.element,\n          pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"pushParticle\",\n    value: function pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n\n        if (!canAdd) {\n          return;\n        }\n\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n\n        __classPrivateFieldGet(this, _Particles_engine, \"f\").dispatchEvent(\"particleAdded\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n\n  return Particles;\n}();\n_Particles_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particles_engine","calcPositionFromSize","getRangeMax","getRangeMin","getValue","randomInRange","setRangeValue","InteractionManager","Particle","Point","QuadTree","Rectangle","loadParticlesOptions","Particles","engine","container","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","canvasSize","canvas","size","linksColors","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","length","_a","options","actualOptions","handled","init","plugin","particlesInitialization","undefined","addManualParticles","group","particles","groups","groupOptions","i","count","j","number","addParticle","pathGenerator","clear","draw","factor","index","quantity","override","deleted","particle","destroy","splice","zIdx","indexOf","dispatchEvent","data","removeAt","delta","particlesToDelete","update","resizeFactor","ignoresResizeRatio","position","x","y","bubble","inRange","destroyed","particleUpdate","mover","isEnabled","move","push","insert","getPosition","remove","externalInteract","updater","spawning","particlesInteract","sort","a","b","z","id","drawPlugin","p","nb","mouse","overrideOptions","pushing","density","countToRemove","removeQuantity","pushParticle","parent","splitOptions","split","color","load","hsl","getFillColor","min","max","offset","sizeOffset","velocity","splitCount","unbreakable","setTimeout","p1","p2","range","key","res","Math","random","p3","id1","id2","id3","manualParticles","applyDensity","mode","handleClickMode","manualCount","enable","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","initializer","canAdd","e","console","warn","WeakMap"],"sources":["C:/Users/golde/Documents/projects/portfolio/node_modules/tsparticles-engine/esm/Core/Particles.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { calcPositionFromSize, getRangeMax, getRangeMin, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { loadParticlesOptions } from \"../Utils/Utils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        container.pathGenerator.init(container);\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n            __classPrivateFieldGet(this, _Particles_engine, \"f\").dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    async update(delta) {\n        const container = this.container, particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            particle.bubble.inRange = false;\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split;\n        const options = loadParticlesOptions(parent.options);\n        const factor = getValue(splitOptions.factor);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this.initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            __classPrivateFieldGet(this, _Particles_engine, \"f\").dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n_Particles_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}