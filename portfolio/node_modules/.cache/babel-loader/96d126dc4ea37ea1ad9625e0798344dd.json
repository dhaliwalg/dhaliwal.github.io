{"ast":null,"code":"import _classCallCheck from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/golde/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { colorToHsl, getHslAnimationFromHsl, randomInRange } from \"tsparticles-engine\";\n\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n  var _a;\n\n  var colorValue = value;\n\n  if (!colorValue || !valueAnimation.enable) {\n    return;\n  }\n\n  var offset = randomInRange(valueAnimation.offset);\n  var velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\n\n  if (!decrease || colorValue.status === 0) {\n    colorValue.value += velocity;\n\n    if (decrease && colorValue.value > max) {\n      colorValue.status = 1;\n      colorValue.value -= colorValue.value % max;\n    }\n  } else {\n    colorValue.value -= velocity;\n\n    if (colorValue.value < 0) {\n      colorValue.status = 0;\n      colorValue.value += colorValue.value;\n    }\n  }\n\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\n\nfunction updateColor(particle, delta) {\n  var _a, _b, _c;\n\n  var animationOptions = particle.options.color.animation;\n\n  if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n    updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n  }\n\n  if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n    updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n  }\n\n  if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n    updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n  }\n}\n\nexport var ColorUpdater = /*#__PURE__*/function () {\n  function ColorUpdater(container) {\n    _classCallCheck(this, ColorUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(ColorUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var hslColor = colorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n\n      if (hslColor) {\n        particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a, _b, _c;\n\n      var animationOptions = particle.options.color.animation;\n      return !particle.destroyed && !particle.spawning && (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable || ((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable || ((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable);\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      updateColor(particle, delta);\n    }\n  }]);\n\n  return ColorUpdater;\n}();","map":{"version":3,"names":["colorToHsl","getHslAnimationFromHsl","randomInRange","updateColorValue","delta","value","valueAnimation","max","decrease","_a","colorValue","enable","offset","velocity","factor","status","updateColor","particle","_b","_c","animationOptions","options","color","animation","h","undefined","s","l","ColorUpdater","container","hslColor","id","reduceDuplicates","retina","reduceFactor","destroyed","spawning"],"sources":["C:/Users/golde/Documents/projects/portfolio/node_modules/tsparticles-updater-color/esm/ColorUpdater.js"],"sourcesContent":["import { colorToHsl, getHslAnimationFromHsl, randomInRange } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a;\n    const colorValue = value;\n    if (!colorValue || !valueAnimation.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset);\n    const velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n        updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n    }\n    if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n        updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n    }\n    if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n        updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = colorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}